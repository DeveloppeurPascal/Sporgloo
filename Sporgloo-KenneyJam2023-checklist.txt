=> faire un TFrame pour un champ de saisie
=> coder les écrans du jeu :
==> écran des scores (hall of fame) : background du jeu, boite de dialogue avec titre, liste des scores à l'intérieur (plus tard aussi les pseudos après modération)
==> écran des crédits du jeu : background du jeu, boite de dialogue avec titre, texte
==> écran des options/réglages : background du jeu, boite de dialogue avec titre, gestion du volume et de l'activation des musiques d'ambience, gestion du volume et de l'activation des bruitages (si on en ajoute plus tard)
==> écran du jeu (nouvelle partie) : background du jeu, boite de dialogue avec titre, saisie du nom du joueur (facultatif) pour stockage avec son score plus tard
==> écran du jeu (jeu en cours) : background du jeu, curseur souris ou contrôleur de jeu, boutons pause / play/pause musique, play/pause bruitages, score, niveau de vie, nombre de pastilles (= étoiles) dispos, actions du joueur, actions du personnage


- gérer les déplacements du joueurs vers l'étoile la plus proche en path finding automatique
- ajouter score, étoiles, niveau de vie à l'écran
- implémenter "new game" et "continue"
- configurer le VPS sous Debian pour le serveur (PAServer + version RELEASE du programme)
- tests du programme serveur sur un serveur sous Linux Debian
- transformation du programme serveur en démon Linux (#29)


- changer l'UI, ajouter boites de dialogue, actions entre joueurs et revoir le fonctionnement global du jeu
- ajout des écrans manquants (cf TLayout dans fMain.pas du jeu)


- traiter les TODO


- publier version de test


- traiter les messages d'erreur côté client (provenant de l'API client/serveur)
- traiter les messages d'erreur côté serveur (provenant de l'API client/serveur)
- ajouter des bruitages


- tests iOS (sur tablette)
- tests Android (sur tablette)


- changer le stockage du jeu côté serveur (mettre une base de données au lieu du stockage en mémoire) (#35)
- permettre au joueur de choisir un avatar pour son personnage


- traduire les textes à l'écran
